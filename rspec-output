RSpecの実行結果を出力

ApplicationHelper
  full_titleメソッド
    引数なしの場合
      base titleを返すこと
    引数ありの場合
      full titleを返すこと

Answer
  有効なファクトリを持つこと
  バリデーション
    content
      presence: true
      length: { maximum: 1000 }
  dependent: :destroy
    質問を消去すると、紐づいた回答も消去されること
    ユーザーを削除すると、紐づいた質問、回答も削除されること
  メソッド
    is_best_answer?
      trueを返すこと
      falseを返すこと

Comment
  有効なファクトリを持つこと
  バリデーション
    userがいなければいけないこと
    commentableがなければならないこと
    contentが空白ではいけないこと
    contentの文字数
      1000文字以下
      1001文字以上
  dependent: :destroy
    questionに紐づいて削除されること
    answerに紐づいて削除されること
    userに紐づいて削除されること
  通知関連
    create_notification_comment(comment, visited_id)
      正しい通知が作成されていること

Commentable
  commentable => question
    他にコメントがない場合
      commetable.user宛の通知が作成できていること
    他にコメントがある場合
      先にコメントした人宛の通知が作成されていること
  commentable => post
    他にコメントがない場合
      commetable.user宛の通知が作成できていること
    他にコメントがある場合
      先にコメントした人宛の通知が作成されていること
  commentable => answer
    他にコメントがない場合
      commetable.user宛の通知が作成できていること
    他にコメントがある場合
      先にコメントした人宛の通知が作成されていること

Like
  Question
    liked_users
      いいねしたユーザーを取得できること
    liked?(user)
      いいねしている場合
        trueを返すこと
      いいねしていない場合
        falseを返すこと
    liked_by(user)
      いいねしている場合
        いいねできないこと
      いいねしてない場合
        いいねできること
    unliked_by(user)
      nilを返すこと
      いいねしている場合
        いいね解除できること
  Answer
    liked_users
      いいねしたユーザーを取得できること
    liked?(user)
      いいねしている場合
        trueを返すこと
      いいねしていない場合
        falseを返すこと
    liked_by(user)
      いいねしている場合
        いいねできないこと
      いいねしてない場合
        いいねできること
    unliked_by(user)
      nilを返すこと
      いいねしている場合
        いいね解除できること

Notification
  follow通知
    followeeが削除された場合
      紐づいた通知が削除されること
    followerが削除された場合
      紐づいた通知が削除されること
  回答、ベストアンサー通知
    answer通知
      質問が削除された場合
        紐づいた通知が削除されること
      回答が削除された場合
        紐づいた通知が削除されること
    ベストアンサー通知
      質問が削除された場合
        紐づいた通知が削除されること
      回答が削除された場合
        紐づいた通知が削除されること
  コメント通知
    commentable => question
      commentableを削除したとき
        紐づいた通知が削除されること
      commentを削除したとき
        紐づいた通知が削除されること
    commentable => answer
      commentableを削除したとき
        紐づいた通知が削除されること
      commentを削除したとき
        紐づいた通知が削除されること
    commentable => post
      commentableを削除したとき
        紐づいた通知が削除されること
      commentを削除したとき
        紐づいた通知が削除されること

Question
  有効なファクトリを持つこと
  バリデーション
    title
      presence: true
      length: { maximum: 50 }
    content
      presence: true
      length: { maximum: 1000 }
  dependent: :destroy
    ユーザーを削除すると、紐づいた質問も削除されること
  メソッドのテスト
    has_best_answer?
      trueを返すこと
      falseを返すこと
    create_notification_best_answer(answer)
      回答者が質問者と異なる場合
        ベストアンサーの通知が作成できている事
      回答者が質問者本人の場合
        通知が作成されていないこと
    decide_best_answer(answer)
      ベストアンサーを決定できること
      既にベストアンサーが決定している場合
        nilを返すこと
      異なる質問の回答を引数に取った時
        nilを返すこと
    related_questions
      同じカテゴリの質問を取得できていること
      別カテゴリの質問は取得していないこと
      レシーバー自体は取得していないこと
      カテゴリー別で、同じ質問がある場合
        同じ質問は一つしか取得してないこと

User
  有効なファクトリを持つこと
  正常に作成できること
  正常に削除できること
  バリデーション
    name
      presense :true
      length: {maximum: 20}
    password
      maximum: 30
      minimum: 6
    profile
      length: { maximum: 400 }
  ストック関連
    stocked?(question)
      ストックしている場合、trueを返すこと
      ストックしていない場合、falseを返すこと
    stock(question)
      ストックしていない場合、ストック出来ること
      ストックしている場合、nilを返すこと
    unstock(question)
      ストックしている場合、ストックを解除できること
      ストックしていない場合、nilを返すこと
    dependent: :destrou
      ユーザーを削除すると、紐づいたストックも削除されること
  通知関連
    create_notification_stock(question)
      本人以外がストックした場合
        ストック通知が作成できている事
        事前にストックされていた場合
          再度ストックされても通知が作成されないこと
      本人がストックした場合
        通知が作成されていないこと
    create_notification_follow(other_user)
      フォロー通知が作成できていること
      フォロー、フォロー解除が何度も行われた時
        通知が一度しか作成されないこと
    create_notification_answer(answer)
      回答者が質問者と異なる場合
        回答通知が作成できている事
      回答者が質問者本人の場合
        通知が作成されていないこと
    has_new_notifications?
      未読の通知がある時
        trueを返すこと
      未読の通知がない場合
        falseを返すこと
    create_notification_comment(comment, visited_id)
      本人以外がコメントした場合
        正しい通知が作成されていること
      本人がコメントした場合
        通知が作成されていないこと
  フォロー関連
    following?(other_user)
      フォローしていない場合、falseを返すこと
      フォローしている場合、trueを返すこと
    follow(other_user)
      フォローしていない場合、フォローできること
      フォローしている場合、nilを返すこと
      自分自身をフォローできないこと
    unfollow(other_user)
      フォローしていない場合、nilを返すこと
      フォローしている場合、フォロー解除できること
  タグ、カテゴリー関連
    following_category?(category)
      フォローしている時
        trueを返すこと
      フォローしていない時
        falseを返すこと
    follow_category(category)
      フォローしている時
        再度フォローできないこと
      フォローしていない時
        フォローできること
    unfollow_category(category)
      フォローしている時
        フォロー解除できること
      フォローしていない時
        再度フォロー解除できないこと
  ランキング関連
    create_ranking(obj)
      回答数ランキング
        正常にソートできている事
      質問数ランキング
        正常にソートできている事
  ゲストユーザー機能
    User.guest
      seeds.rbで定義したゲストユーザーが削除されてない場合
        ゲストユーザーを返すこと
      ゲストユーザーが削除されている時
        ゲストユーザーを返すこと
  フィード機能
    followee_items()
      Questionを引数に取った時
        フォロワーの質問を含み、フォローしてない人の質問を含まないこと
      Postを引数に取った時
        フォロワーのつぶやきを含み、フォローしてない人のつぶやきを含まないこと
    カテゴリーのフィード
      mycategory_items(Question)
        フォロー中のカテゴリーを含むアイテムを含み、フォローしてないカテゴリーのみのアイテムは含まないこと
        複数のカテゴリーを含むアイテムがある場合
          アイテムが重複していないこと
      mycategory_items(Post)
        フォロー中のカテゴリーを含むアイテムを含み、フォローしてないカテゴリーのみのアイテムは含まないこと
        複数のカテゴリーを含むアイテムがある場合
          アイテムが重複していないこと

Answers
  create
    ログインしている時
      正常に作成できること
    ログインしていない時
      サインイン画面へリダイレクトされること
  destoy
    ログインしている時
      回答者の場合
        削除できること
      回答者でない場合
        エラーが発生すること
    ログインしていない時
      サインイン画面へリダイレクトされること
  edit
    ログインしている時
      回答者本人の場合
        200レスポンスを返すこと
      回答者本人でない場合
        エラーが発生すること
    ログインしていない時
      サインイン画面へリダイレクトされること
  update
    ログインしている時
      回答者本人の場合
        正常にリダイレクトされること
      回答者本人でない場合
        エラーが発生すること
    ログインしていない時
      サインイン画面へリダイレクトされること

BestAnswers
  create
    ログインしている時
      質問者本人の場合
        ベストアンサーを決定できること
        ベストアンサーが既に決定している時
          ベストアンサーが変わっていないこと
        異なる質問の回答をベストアンサーとして送信した場合
          エラーが発生すること
      質問者本人でない場合
        エラーが発生すること
    ログインしていない時
      サインイン画面へリダイレクトされること

Category::Categories
  index
    200レスポンスを返すこと
  show
    200レスポンスを返すこと

Comments
  commentable => question
    create
      ログインしている時
        正常に作成できること
      ログインしていない時
        サインイン画面へリダイレクトされること
    destroy
      ログインしている時
        本人の場合
          正常に削除できること
        本人でない場合
          エラーが発生すること
      ログインしていない時
        サインイン画面へリダイレクトされること
  commentable => answer
    create
      ログインしている時
        正常に作成できること
      ログインしていない時
        サインイン画面へリダイレクトされること
    destroy
      ログインしている時
        本人の場合
          正常に削除できること
        本人でない場合
          エラーが発生すること
      ログインしていない時
        サインイン画面へリダイレクトされること
  commentable => post
    create
      ログインしている時
        正常に作成できること
      ログインしていない時
        サインイン画面へリダイレクトされること
    destroy
      ログインしている時
        本人の場合
          正常に削除できること
        本人でない場合
          エラーが発生すること
      ログインしていない時
        サインイン画面へリダイレクトされること

Category::FollowCategories
  create
    ログインしている時
      フォローしていない場合
        フォロー出来ること
      フォローしている時
        再度フォロー出来ないこと
    ログインしていない場合
      サインイン画面へリダイレクトされること
  destroy
    ログインしている時
      フォローしている場合
        フォロー解除できること
      フォローしていない場合
        再度フォロー解除できないこと
    ログインしていない場合
      サインイン画面へリダイレクトされること

Followees
  index
    200レスポンスを返すこと
  create
    ログインしている時
      フォローしていない場合
        フォローできること
      既にフォローしている場合
        フォローできないこと
    ログインしていない時
      サインイン画面へリダイレクトされること
  destroy
    ログインしている時
      既にフォローしている時
        フォロー解除できること
      フォローしていない場合
        フォロー解除できないこと
    ログインしていない時
      サインイン画面へリダイレクトされること

Followers
  index
    200レスポンスを返すこと

Home
  GET
    リクエストが成功すること

Likes
  likable => question
    create
      ログインしている時
        正常にいいね出来ること
      ログインしていない時
        サインイン画面へリダイレクトされること
    destroy
      ログインしている時
        本人の場合
          いいね解除できること
        本人でない場合
          エラーが発生すること
      ログインしていない時
        サインイン画面へリダイレクトされること
  likable => answer
    create
      ログインしている時
        正常にいいね出来ること
      ログインしていない時
        サインイン画面へリダイレクトされること
    destroy
      ログインしている時
        本人の場合
          いいね解除できること
        本人でない場合
          エラーが発生すること
      ログインしていない時
        サインイン画面へリダイレクトされること
  likable => post
    create
      ログインしている時
        正常にいいね出来ること
      ログインしていない時
        サインイン画面へリダイレクトされること
    destroy
      ログインしている時
        本人の場合
          いいね解除できること
        本人でない場合
          エラーが発生すること
      ログインしていない時
        サインイン画面へリダイレクトされること

Notifications
  index
    ログインしている時
      200レスポンスを返すこと
    ログインしていない時
      サインイン画面へリダイレクトされること

Posts
  index
    200レスポンスを返すこと
  show
    200レスポンスを返すこと
  create
    ログインしている時
      正常に作成できること
    ログインしていない場合
      サインイン画面へリダイレクトされること
  edit
    ログインしている時
      本人の場合
        200レスポンスを返すこと
      本人でない場合
        エラーが発生すること
    ログインしていない場合
      サインイン画面へリダイレクトされること
  update
    ログインしている時
      本人の場合
        投稿一覧ページへリダイレクトされること
      本人でない場合
        エラーが発生すること
    ログインしていない場合
      サインイン画面へリダイレクトされること
  destroy
    ログインしている時
      本人の場合
        正常に削除できること
      本人でない場合
        エラーが発生すること
    ログインしていない場合
      サインイン画面へリダイレクトされること

Questions
  questions#index
    behaves like リクエストが成功すること
      returns 200
  questions#show
    behaves like リクエストが成功すること
      returns 200
  questions#new
    ログインしている時
      behaves like リクエストが成功すること
        returns 200
    ログインしていない時
      behaves like サインイン画面へリダイレクトされること
        redirect_to new_user_session_path
  questions#create
    ログインしている時
      正常に質問を作成できること
    ログインしていない時
      質問を投稿できないこと
  questions#destroy
    ログインしている時
      質問作成者本人の場合
        正常に削除できること
      質問作成者本人でない場合
        エラーが発生すること
    ログインしていない場合
      behaves like サインイン画面へリダイレクトされること
        redirect_to new_user_session_path
  questions#edit
    ログインしている時
      質問者本人の場合
        behaves like リクエストが成功すること
          returns 200
      質問者本人でない場合
        エラーが発生すること
    ログインしていない時
      behaves like サインイン画面へリダイレクトされること
        redirect_to new_user_session_path
  question#update
    ログインしている時
      質問者本人の場合
        成功すること
      質問者本人でない場合
        エラーが発生すること
    ログインしていない時
      behaves like サインイン画面へリダイレクトされること
        redirect_to new_user_session_path

Rankings
  get
    200レスポンスを返すこと

Searches
  index
    200レスポンスを返すこと

Stocks
  index
    200レスポンスを返すこと
  create
    ログインしている時
      ストックできること
    ログインしていない時
      サインイン画面へリダイレクトされること
  destroy
    ログインしている時
      正常に削除できること
    ログインしていない時
      サインイン画面へリダイレクトされること

Users::Registrations
  #update
    ゲストユーザーとしてログインしている時
      ホーム画面へリダイレクトされること
  #destroy
    ゲストユーザーとしてログインしている時
      ホーム画面へリダイレクトされること

Users::Sessions
  #new_guest
    session[:user_return_to]が存在しているとき
      フレンドリーフォワーディングされること

Users
  users/show
    リクエストが成功すること

Answers
  ログインしている時
    正常に回答できること
    異常値
      presence: true
      length: { maximum: 1000 }
  削除機能が正常に働いていること
    回答者しか自分の回答を削除できないこと
    回答者は自分の回答を削除できること
    バグ再現テスト
  編集機能が正常に働いていること
    正常値
    異常値

BestAnswers
  ベストアンサー
    ベストアンサーを決定できること
    質問者でなければ、ベストアンサーに選べないこと
    一度ベストアンサーを決めた場合
      ベストアンサーを変更できないこと

Category::Shows
  フォローボタン
    フォローしていないとき
      フォローできること
    フォローしている時
      フォロー解除できること

Comments::Answers
  ログインしていないとき
    コメントフォームが存在しないこと
  Create
    正常に作成できること
    空白のまま送信した場合、失敗すること
    1001文字以上のコメントを送信した場合、失敗する
  Destroy
    コメントした本人ならば、コメントを削除できること
    コメントした本人でなければ、コメントを削除できないこと

Comments::Questions
  ログインしていないとき
    コメントフォームが存在しないこと
  Create
    正常に作成できること
    空白のまま送信した場合、失敗すること
    1001文字以上のコメントを送信した場合、失敗する
  Destroy
    コメントした本人ならば、コメントを削除できること
    コメントした本人でなければ、コメントを削除できないこと

Follows
  ログインしていないとき
    フォローボタンが表示されてないこと
  ログインしているとき
    フォローできること
    フォロー解除できること

KaminariPaginations
  posts/indexがActionController::UnknownFormatとなるため保留 (PENDING: No reason given)
  questions#index
    ページネーション部分が表示されていること
    一ページあたりの表示数が正しいこと
  stocks#index
    ページネーション部分が表示されていること
    一ページあたりの表示数が正しいこと

Likes::Answers
  ログインしていない時
    いいねボタンが表示されていないこと
  ログインしている時
    いいねできること
    いいねしてあるとき
      いいね解除できること
    いいねボタン
      いいねしてない時
        切り替わること
      いいねしている時
        切り替わること

Likes::Posts
  ログインしていない時
    いいねボタンが表示されていないこと
  ログインしている時
    いいねしていない時
      いいねできること
    いいねしている時
      いいね解除できること

Likes::Questions
  ログインしていない時
    いいねボタンが表示されていないこと
  ログインしている時
    いいねできること
    いいねしてあるとき
      いいね解除できること
    いいねボタン
      いいねしてない時
        切り替わること
      いいねしている時
        切り替わること

Notifications
  通知ページのテスト
    ストック通知
      本人以外がストックした場合
        ストック通知が作成されていること
        ストックボタンを連打された時
          通知が作成されていないこと
      本人がストックした場合
        通知が作成されていないこと
    フォロー通知
      通知されていること
      フォローボタンを連打された時
        通知が作成されていないこと
    回答通知
      回答者が質問者本人でない場合
        通知されていること
      回答者が質問者本人の場合
        通知が作成されていないこと
    ベストアンサー通知
      回答者と質問者が異なる場合
        通知されていること
      質問者本人の場合
        通知が作成されていないこと
    コメント通知
      commentable => question
        commentable.user以外がコメントした場合
          事前にコメントされてない場合
            commentable.userへの通知されていること
          事前にコメントされている場合
            事前にコメントしているユーザーへ通知されていること
        commentable.userがコメントした場合
          通知が作成されていないこと
      commentable => answer
        commentable.user以外がコメントした場合
          事前にコメントされてない場合
            commentable.userへの通知されていること
          事前にコメントされている場合
            事前にコメントしているユーザーへ通知されていること
        commentable.userがコメントした場合
          通知が作成されていないこと
      commentable => post
        commentable.user以外がコメントした場合
          事前にコメントされてない場合
            commentable.userへの通知されていること
          事前にコメントされている場合
            事前にコメントしているユーザーへ通知されていること
        commentable.userがコメントした場合
          通知が作成されていないこと

Posts
  create
    正常値
      正常に投稿できること
      タグなしでも投稿できること
    異常値
      空白の場合
        投稿できず、エラーメッセージが表示されること
      文字数オーバーの場合
        投稿できず、エラーメッセージが表示されること
  update
    編集できること
  destory
    削除できること
    本人でない場合
      削除ボタンが表示されていないこと

Questions
  質問の投稿
    正常に投稿が出来ること
    カテゴリー
      タグを付けて質問できること
      選択していないタグがついていないこと
    異常値
      title
        空白の場合
          失敗し、エラーメッセージが表示されること
        文字数オーバーの場合
          失敗し、エラーメッセージが表示されること
      content
        空白の場合
          失敗し、エラーメッセージが表示されること
        文字数オーバーの場合
          失敗し、エラーメッセージが表示されること
  質問の削除
    質問者は質問を削除できること
    質問者しか削除できないこと
  質問の編集
    editページリンクが機能していること
    入力系
      正常値
        成功すること
      異常値
        タイトルが空白
        コンテントが空白
    タグ機能
      タグを編集できること

Searches
  検索条件のテスト
    解決済みかどうかでの検索
      未解決の場合
        未解決の質問を返すこと
        解決済みの質問は返さないこと
      解決済みの場合
        解決済みの質問を返すこと
        未解決の質問は返さないこと
    カテゴリーの検索
      選択したカテゴリーの質問を返すこと
      正しいカテゴリーの質問を返すこと
    フリーワード検索
      タイトルで検索できること
      内容で検索できること
      カテゴリー名で検索できること
      該当しない質問は返さないこと

Stocks
  ログインしているとき
    ストックできること
    ストックを解除できること
  ログインしていないとき
    ストックできないこと

SignUps
  正常にサインアップできること
  異常値
    お名前
      空白の場合
        失敗し、エラーメッセージが表示されること
      文字数オーバーの場合
        失敗し、エラーメッセージが表示されること
    メールアドレス
      空白の場合
        失敗し、エラーメッセージが表示されること
      文字数オーバーの場合
        失敗し、エラーメッセージが表示されること
      重複している場合
        失敗し、エラーメッセージが表示されること
    パスワード
      空白の場合
        失敗し、エラーメッセージが表示されること
      文字数オーバーの場合
        失敗し、エラーメッセージが表示されること
      文字数が少ない場合
        失敗し、エラーメッセージが表示されること
      パスワードが確認用と異なる場合
        失敗し、エラーメッセージが表示されること

Users::SignIns
  正常値
    正常にサインインできること
  組み合わせが正しくない場合
    ログインできないこと
  ゲストユーザーログイン
    ゲストユーザーとしてログインできること

Finished in 1 minute 0.29 seconds (files took 2.27 seconds to load)
332 examples, 0 failures, 1 pending
